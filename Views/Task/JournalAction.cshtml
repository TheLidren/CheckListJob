@model JournalViewModel

<script src="/js/submitForm.js"></script>
<style>
    .prokrutka {
        height: 45em;
        overflow-y: scroll;
    }

        .prokrutka::-webkit-scrollbar {
            width: 7px;
            background-color: #f9f9fd;
        }
</style>
<div class="container mt-4">
    <div class="filter">
        @using (Html.BeginForm("JournalAction", "Task", FormMethod.Get, new { @id = "filter-form"}))
        {
            @Html.Hidden("pageSort", Model.JournalSort.SelectedSort)
            @Html.Hidden("countRows", Model.CountRows)
            <div class="row"> 
                <div class="col-3">
                    @Html.Label("shiftId", "Смена:", new { @class = "mb-2"})
                    @Html.DropDownList("shiftId", (SelectList)Model.Shifts, new { @class = "form-select" })
                </div>
                <div class="col-3">
                    @Html.Label("userId", "Пользователь:", new { @class = "mb-2" })
                    @Html.DropDownList("userId", (SelectList)Model.Users, new { @class = "form-select" })
                </div>
                <div class="col-2">
                    @Html.Label("dateStart", "От:", new { @class = "mb-2" })
                    @Html.TextBox("dateStart", Model.DateStart, new { type = "date", @class = "form-control" })
                </div>
                <div class="col-2">
                    @Html.Label("dateEnd", "До:", new { @class = "mb-2" })
                    @Html.TextBox("dateEnd", Model.DateEnd, new { type = "date", @class = "form-control" })
                </div><div class="col-2 mt-2">
                    <input type="submit" value="Фильтрация" class="btn btn-light m-4" />
                </div>
            </div>
        }
    </div>
    <div class="text-center">
        <div class="prokrutka mb-4">
            <table class="table fs-5">
                <thead>
                    <tr>
                        <th scope="col-4">Задание</th>
                        <th class="col-3">@Html.ActionLink("Смена", "JournalAction", "Task", new { }, new { @class = "text-decoration-none text-primary submit", parameter = Model.JournalSort.ShiftSort })</th>
                        <th class="col-2">@Html.ActionLink("Логин", "JournalAction", "Task", new { }, new { @class = "text-decoration-none text-primary submit", parameter = Model.JournalSort.EmailSort })</th>
                        <th class="col-2">@Html.ActionLink("Время", "JournalAction", "Task", new { }, new { @class = "text-decoration-none text-primary submit", parameter = Model.JournalSort.MarkActionSort })</th>
                    </tr>
                </thead>
                <tbody class="prokrutka">
                    @foreach (var item in Model.Log.Take(Model.CountRows))
                    {
                        <tr>
                            <td>
                                <p class="fw-bold d-inline text-dark">@item.ShiftTask.Number<text>: </text></p>@item.ShiftTask.Name
                            </td>
                            <td>@item.ShiftTask.Shift.Name</td>
                            <td>@item.User.Login</td>
                            <td>@item.MarkAction.ToString("dd-MM-yyyy HH:mm")</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        @if (Model.Log.Count() > Model.CountRows)
        {
            int count = Model.CountRows + 50;
            <a class="btn-secondary text-decoration-none p-2 rounded submit" data-countRow="@count" parameter="" asp-action="Journalaction" asp-controller="Task">загрузить ещё</a>
        }
    </div>
</div>



